{"ast":null,"code":"var _jsxFileName = \"/home/mr-miel/Documents/projet/The Artisan/Youtube-clone/src/components/atoms/Logo.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport logo_text_dark from '../../assets/images/logo_text_dark.png';\nimport logo_text_light from '../../assets/images/logo_text_light.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst variants = {\n  colors: {\n    black: logo_text_light,\n    white: logo_text_dark\n  }\n  // size: {\n  //     \"64\":\n  // }\n};\n\nconst Logo = ({\n  color,\n  size,\n  astext\n}) => {\n  if (!astext) {} else {\n    const src = variants.colors[color];\n  }\n  // if (size) classNames.push('font-bold')\n  // if (astext) classNames.push(`text-`)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: src,\n      alt: \"Alternate Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_c = Logo;\nLogo.prototype = {\n  color: PropTypes.string.isRequired,\n  size: PropTypes.number,\n  astext: PropTypes.bool\n};\nexport default Logo;\nvar _c;\n$RefreshReg$(_c, \"Logo\");","map":{"version":3,"names":["React","PropTypes","logo_text_dark","logo_text_light","jsxDEV","_jsxDEV","variants","colors","black","white","Logo","color","size","astext","src","children","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","prototype","string","isRequired","number","bool","$RefreshReg$"],"sources":["/home/mr-miel/Documents/projet/The Artisan/Youtube-clone/src/components/atoms/Logo.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport logo_text_dark from '../../assets/images/logo_text_dark.png';\nimport logo_text_light from '../../assets/images/logo_text_light.png';\n\nconst variants = {\n    colors: {\n        black: logo_text_light,\n        white: logo_text_dark,\n    },\n    // size: {\n    //     \"64\":\n    // }\n}\n\nconst Logo = ({ color , size, astext,  }) => {\n    \n    if(!astext){\n        \n    }else{\n        const src = variants.colors[color];   \n    }\n    // if (size) classNames.push('font-bold')\n    // if (astext) classNames.push(`text-`)\n  \n    return (\n        <div>\n            <img\n                src={src}\n                alt=\"Alternate Text\"\n            />\n\n        </div>\n    );\n}\n\nLogo.prototype = {\n    color: PropTypes.string.isRequired,\n    size: PropTypes.number,\n    astext: PropTypes.bool\n}\n\nexport default Logo;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,wCAAwC;AACnE,OAAOC,eAAe,MAAM,yCAAyC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,MAAMC,QAAQ,GAAG;EACbC,MAAM,EAAE;IACJC,KAAK,EAAEL,eAAe;IACtBM,KAAK,EAAEP;EACX;EACA;EACA;EACA;AACJ,CAAC;;AAED,MAAMQ,IAAI,GAAGA,CAAC;EAAEC,KAAK;EAAGC,IAAI;EAAEC;AAAS,CAAC,KAAK;EAEzC,IAAG,CAACA,MAAM,EAAC,CAEX,CAAC,MAAI;IACD,MAAMC,GAAG,GAAGR,QAAQ,CAACC,MAAM,CAACI,KAAK,CAAC;EACtC;EACA;EACA;;EAEA,oBACIN,OAAA;IAAAU,QAAA,eACIV,OAAA;MACIS,GAAG,EAAEA,GAAI;MACTE,GAAG,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEd,CAAC;AAAAC,EAAA,GAnBKX,IAAI;AAqBVA,IAAI,CAACY,SAAS,GAAG;EACbX,KAAK,EAAEV,SAAS,CAACsB,MAAM,CAACC,UAAU;EAClCZ,IAAI,EAAEX,SAAS,CAACwB,MAAM;EACtBZ,MAAM,EAAEZ,SAAS,CAACyB;AACtB,CAAC;AAED,eAAehB,IAAI;AAAC,IAAAW,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}