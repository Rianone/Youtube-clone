{"ast":null,"code":"var _jsxFileName = \"/home/mr-miel/Documents/projet/The Artisan/Youtube-clone/src/components/atoms/Text.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst variants = {\n  base: \"text-base\",\n  colors: {\n    default: \"text-black\",\n    white: 'text-gray-50'\n  }\n};\nconst Text = ({\n  textAlign,\n  size,\n  fontStyle,\n  color = \"default\",\n  bold = false,\n  classeName,\n  ...props\n}) => {\n  const classNames = [\"text-base\", variants.colors[color], classeName];\n  if (bold) classNames.push('font-bold');\n  if (textAlign) classNames.push(`text-${textAlign}`);\n  if (size) classNames.push(`text-${size}`);\n  if (fontStyle) classNames.push(`font-${fontStyle}`);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    ...props,\n    className: classNames.join(' ')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_c = Text;\nText.prototype = {\n  bold: PropTypes.bool,\n  textAlign: 'left' | 'center',\n  size: \"sm\" | \"md\",\n  color: \"default\" | \"white\" | \"gray\" | \"primary\" | \"danger\" | \"amber\",\n  fontStyle: \"light\"\n};\nexport default Text;\nvar _c;\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","variants","base","colors","default","white","Text","textAlign","size","fontStyle","color","bold","classeName","props","classNames","push","className","join","fileName","_jsxFileName","lineNumber","columnNumber","_c","prototype","bool","$RefreshReg$"],"sources":["/home/mr-miel/Documents/projet/The Artisan/Youtube-clone/src/components/atoms/Text.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst variants = {\n    base: \"text-base\",\n    colors: {\n        default: \"text-black\",\n        white: 'text-gray-50',\n    }\n}\n\nconst Text = ({ textAlign, size, fontStyle, color = \"default\" , bold = false, classeName, ...props }) => {\n    const classNames = [\n        \"text-base\",\n        variants.colors[color],\n        classeName\n    ];\n\n    if (bold) classNames.push('font-bold')\n    if (textAlign) classNames.push(`text-${textAlign}`)\n    if (size) classNames.push(`text-${size}`)\n    if (fontStyle) classNames.push(`font-${fontStyle}`)\n\n    return (\n        <p {...props}  className={classNames.join(' ')}></p>\n    );\n}\n\nText.prototype = {\n    bold: PropTypes.bool,\n    textAlign: 'left' | 'center',\n    size: \"sm\" | \"md\",\n    color: \"default\" | \"white\" | \"gray\" | \"primary\" | \"danger\" | \"amber\",\n    fontStyle: \"light\"\n}\n\nexport default Text;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnC,MAAMC,QAAQ,GAAG;EACbC,IAAI,EAAE,WAAW;EACjBC,MAAM,EAAE;IACJC,OAAO,EAAE,YAAY;IACrBC,KAAK,EAAE;EACX;AACJ,CAAC;AAED,MAAMC,IAAI,GAAGA,CAAC;EAAEC,SAAS;EAAEC,IAAI;EAAEC,SAAS;EAAEC,KAAK,GAAG,SAAS;EAAGC,IAAI,GAAG,KAAK;EAAEC,UAAU;EAAE,GAAGC;AAAM,CAAC,KAAK;EACrG,MAAMC,UAAU,GAAG,CACf,WAAW,EACXb,QAAQ,CAACE,MAAM,CAACO,KAAK,CAAC,EACtBE,UAAU,CACb;EAED,IAAID,IAAI,EAAEG,UAAU,CAACC,IAAI,CAAC,WAAW,CAAC;EACtC,IAAIR,SAAS,EAAEO,UAAU,CAACC,IAAI,CAAE,QAAOR,SAAU,EAAC,CAAC;EACnD,IAAIC,IAAI,EAAEM,UAAU,CAACC,IAAI,CAAE,QAAOP,IAAK,EAAC,CAAC;EACzC,IAAIC,SAAS,EAAEK,UAAU,CAACC,IAAI,CAAE,QAAON,SAAU,EAAC,CAAC;EAEnD,oBACIT,OAAA;IAAA,GAAOa,KAAK;IAAGG,SAAS,EAAEF,UAAU,CAACG,IAAI,CAAC,GAAG;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAE5D,CAAC;AAAAC,EAAA,GAfKhB,IAAI;AAiBVA,IAAI,CAACiB,SAAS,GAAG;EACbZ,IAAI,EAAEb,SAAS,CAAC0B,IAAI;EACpBjB,SAAS,EAAE,MAAM,GAAG,QAAQ;EAC5BC,IAAI,EAAE,IAAI,GAAG,IAAI;EACjBE,KAAK,EAAE,SAAS,GAAG,OAAO,GAAG,MAAM,GAAG,SAAS,GAAG,QAAQ,GAAG,OAAO;EACpED,SAAS,EAAE;AACf,CAAC;AAED,eAAeH,IAAI;AAAC,IAAAgB,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}